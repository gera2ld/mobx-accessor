"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{5430:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>n,metadata:()=>c,toc:()=>d});var i=s(1527),r=s(7214);const n={sidebar_position:1},o="Introduction",c={id:"intro",title:"Introduction",description:"- Strong-typed accessor based on MobX.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/mobx-accessor/docs/intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Get Started",permalink:"/mobx-accessor/docs/getting-started"}},a={},d=[{value:"Why?",id:"why",level:2},{value:"Concepts",id:"concepts",level:2},{value:"Credits",id:"credits",level:2}];function h(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Strong-typed accessor based on ",(0,i.jsx)(t.a,{href:"https://mobx.js.org/",children:"MobX"}),"."]}),"\n",(0,i.jsx)(t.li,{children:"Framework agnostic, easily integrated with React, Vue, or any other framework."}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["\ud83d\udc49"," ",(0,i.jsx)(t.a,{href:"./getting-started",children:"Get Started"})]}),"\n",(0,i.jsx)(t.h2,{id:"why",children:"Why?"}),"\n",(0,i.jsx)(t.p,{children:"MobX is a powerful library that makes state management simple. It is written in pure JavaScript with no compiler magic or framework binding, making it a great library to separate the state from the view, thus allowing us to easy reuse or migrate our logic between different projects even with different tech stack."}),"\n",(0,i.jsx)(t.p,{children:"Redux on the other side, provides great concepts which standardize how we manipulate the state. But it is a pain to write the redux template code."}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.em,{children:"MobX Accessor"})," brings the concepts of Redux to MobX while the code remains neat. ",(0,i.jsx)(t.em,{children:"MobX Accessor"})," is to MobX as ",(0,i.jsx)(t.a,{href:"https://github.com/danielroe/typed-vuex",children:"Typed Vuex"})," is to Vue observable."]}),"\n",(0,i.jsx)(t.h2,{id:"concepts",children:"Concepts"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.em,{children:"MobX Accessor"})," has 4 concepts:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"State"}),": holds the actual data"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Mutations"}),": are the only way to modify ",(0,i.jsx)(t.code,{children:"state"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Getters"}),": derive values from ",(0,i.jsx)(t.code,{children:"state"})," and other ",(0,i.jsx)(t.code,{children:"getters"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Actions"}),": connect the logic with the data"]}),"\n"]}),"\n",(0,i.jsx)(t.mermaid,{value:"flowchart LR\n\nA[View] --\x3e B[Actions]\nB --\x3e C[Mutations]\nC --\x3e D[State]\nD --\x3e A"}),"\n",(0,i.jsxs)(t.p,{children:["\ud83d\udc49"," ",(0,i.jsx)(t.a,{href:"./getting-started",children:"Get Started"})]}),"\n",(0,i.jsx)(t.h2,{id:"credits",children:"Credits"}),"\n",(0,i.jsxs)(t.p,{children:["This project is heavily inspired by ",(0,i.jsx)(t.a,{href:"https://github.com/danielroe/typed-vuex",children:"Typed Vuex"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["The APIs are quite similar, so we can easily share logic or migrate between Vuex projects and projects using ",(0,i.jsx)(t.code,{children:"mobx-accessor"})," with any framework."]})]})}function l(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);